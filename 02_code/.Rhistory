# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05) %>%
select(GO.ID)))
significant_go_groups_method_i_only
significant_go_groups_method_i_only <- GO_method1_up$gen_table[GO_method1_up$gen_table$GO.ID %in% setdiff(# significant groups in Method I
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05) %>%
select(GO.ID)),]
significant_go_groups_method_i_only
setdiff(# significant groups in Method I
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05) %>%
select(GO.ID))
GO_method1_up$gen_table$GO.ID
tmp <- GO_method1_up$gen_table$GO.ID
tmp <- setdiff(# significant groups in Method I
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05) %>%
select(GO.ID))
GO_method1_up$gen_table$GO.ID %in% setdiff(# significant groups in Method I
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05) %>%
select(GO.ID))
GO_method1_up$gen_table$GO.ID
significant_go_groups_method_i_only <- GO_method1_up$gen_table[GO_method1_up$gen_table$GO.ID %in% as.character(setdiff(# significant groups in Method I
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05) %>%
select(GO.ID))),]
as.character(setdiff(# significant groups in Method I
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05) %>%
select(GO.ID)))
setdiff(# significant groups in Method I
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05) %>%
select(GO.ID))
significant_go_groups_method_i_only <- GO_method1_up$gen_table[GO_method1_up$gen_table$GO.ID %in% as.vector(setdiff(# significant groups in Method I
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05) %>%
select(GO.ID))),]
as.vector(setdiff(# significant groups in Method I
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05) %>%
select(GO.ID)))
GO_method1_up$gen_table$GO.ID
sum(GO_method1_up$gen_table$GO.ID %in% as.vector(setdiff(# significant groups in Method I
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05) %>%
select(GO.ID))))
significant_go_groups_method_i_only <- GO_method1_up$gen_table[GO_method1_up$gen_table$GO.ID == as.vector(setdiff(# significant groups in Method I
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05) %>%
select(GO.ID))),]
significant_go_groups_method_i_only <- setdiff(
# significant groups in Method I
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05) %>%
select(GO.ID)
)
GO_method1_up$gen_table[GO_method1_up$gen_table$GO.ID %in% significant_go_groups_method_i_only,]
GO_method1_up$gen_table
GO_method1_up$gen_table$GO.ID
GO_method1_up$gen_table[which(GO_method1_up$gen_table$GO.ID %in% significant_go_groups_method_i_only),]
significant_go_groups_method_i_only
GO_method1_up$gen_table[which(GO_method1_up$gen_table$GO.ID %in% as.list(significant_go_groups_method_i_only)),]
significant_go_groups_method_i_only
which(GO_method1_up$gen_table$GO.ID %in% "GO:1905954")
which(GO_method1_up$gen_table$GO.ID %in% c("GO:1905954", "GO:2001280"))
as.vector(significant_go_groups_method_i_only)
tmp<- as.vector(significant_go_groups_method_i_only)
tmp<- significant_go_groups_method_i_only
View(tmp)
View(tmp)
which(GO_method1_up$gen_table$GO.ID %in% tmp)
str(tmp)
str(GO_method1_up$gen_table$GO.ID)
tmp2 <- as.data.frame(GO_method1_up$gen_table$GO.ID)
GO_method1_up$gen_table[as.data.frame(GO_method1_up$gen_table$GO.ID) %in% as.vector(significant_go_groups_method_i_only),]
tmp2 <- as.data.frame(GO_method1_up$gen_table$GO.ID)
tmp2 %in% tmp
tmp2 <- (GO_method1_up$gen_table$GO.ID)
GO_method1_up$gen_table
tmp2 <- (GO_method1_up$gen_table)
GO_method1_up$gen_table %>% filter(GO.ID %in% significant_go_groups_method_i_only)
significant_go_groups_method_i_only <- setdiff(
# significant groups in Method I
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05) %>%
select(GO.ID)
)
significant_go_groups_method_i_only
GO_method1_up$gen_table %>% filter(GO.ID %in% significant_go_groups_method_i_only$GO.ID)
significant_go_groups_method_i_only <- GO_method1_up$gen_table %>% filter(GO.ID %in% setdiff(
# significant groups in Method I
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05) %>%
select(GO.ID)
)$GO.ID)
significant_go_groups_method_i_only
significant_go_groups_method_i_only <- GO_method1_up$gen_table %>% filter(GO.ID %in% setdiff(
# significant groups in Method I
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05) %>%
select(GO.ID)
)$GO.ID) %>% arrange(Fisher.elim_adjust) %in% head(10)
significant_go_groups_method_i_only
GO_method1_up$gen_table %>% filter(GO.ID %in% setdiff(
# significant groups in Method I
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05) %>%
select(GO.ID)
)$GO.ID) %>% arrange(Fisher.elim_adjust)
GO_method1_up$gen_table %>% filter(GO.ID %in% setdiff(
# significant groups in Method I
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05) %>%
select(GO.ID)
)$GO.ID) %>% arrange(Fisher.elim_adjust) %>% head(10)
significant_go_groups_method_i_only <- GO_method1_up$gen_table %>% filter(GO.ID %in% intersect(
# significant groups in Method I
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05) %>%
select(GO.ID)
)$GO.ID) %>% arrange(Fisher.elim_adjust) %>% head(10)
significant_go_groups_method_i_only
GO_method1_up$gen_table %>% filter(GO.ID %in% intersect(
# significant groups in Method I
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05) %>%
select(GO.ID)
)$GO.ID)
significant_go_groups_method_ii_only <- GO_method2_up$gen_table %>% filter(GO.ID %in% intersect(
# significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust > 0.05) %>%
select(GO.ID)
)$GO.ID) %>% arrange(Fisher.elim_adjust) %>% head(10)
significant_go_groups_method_ii_only
intersect(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05))
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID)
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID)
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05)
intersect(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05)%>%
select(GO.ID))
#@caro change code with elim
# number go groups only found by method i
length(intersect(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05)%>%
select(GO.ID)))
#@caro change code with elim
# number go groups only found by method i
dim(intersect(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05)%>%
select(GO.ID)))
#@caro change code with elim
# number go groups only found by method i
nrow(intersect(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05)%>%
select(GO.ID)))
# number go groups only found by method ii
nrow(intersect(GO_method2_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust > 0.05)%>%
select(GO.ID)))
# number go groups found by method i and ii
nrow(intersect(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust < 0.05)%>%
select(GO.ID)))
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID)
dim(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID))
#@caro change code with elim
# number go groups only found by method i
nrow(intersect(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust > 0.05)%>%
select(GO.ID)))
# number go groups found by method i and ii
nrow(intersect(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust < 0.05)%>%
select(GO.ID)))
632+ 876
nrow(intersect(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust >= 0.05)%>%
select(GO.ID)))
nrow(intersect(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust >= 0.05)%>%
select(GO.ID)))
# number go groups found by method i and ii
nrow(intersect(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust < 0.05)%>%
select(GO.ID)))
# number go groups only found by method ii
nrow(intersect(GO_method2_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust >= 0.05)%>%
select(GO.ID)))
# number go groups only found by method ii
nrow(intersect(GO_method2_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust >= 0.05)%>%
select(GO.ID)))
# number go groups found by method i and ii
nrow(intersect(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust < 0.05)%>%
select(GO.ID)))
876 + 129
dim(GO_method2_up$gen_table %>% filter(Fisher.elim_adjust < 0.05)%>%
select(GO.ID))
nrow(intersect(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust >= 0.05)%>%
select(GO.ID)))
nrow(intersect(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust < 0.05)%>%
select(GO.ID)))
# number go groups found by method i and ii
nrow(setdiff(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust < 0.05)%>%
select(GO.ID)))
tmp1 <- setdiff(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust < 0.05)%>%
select(GO.ID))
tmp2 <- intersect(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust >= 0.05)%>%
select(GO.ID))
setdiff(tmp1, tmp2)
GO_method1_up$gen_table$GO.ID %in% setdiff(tmp1, tmp2)
GO_method1_up$gen_table[GO_method1_up$gen_table$GO.ID %in% setdiff(tmp1, tmp2),]
GO_method1_up$gen_table[GO_method1_up$gen_table$GO.ID %in% setdiff(tmp1, tmp2)$GO.ID,]
GO_method2_up$gen_table[GO_method2_up$gen_table$GO.ID %in% setdiff(tmp1, tmp2)$GO.ID,]
# number go groups only found by method i
nrow(setdiff(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust < 0.05)%>%
select(GO.ID)))
# number go groups found by method i and ii
nrow(intersect(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust < 0.05)%>%
select(GO.ID)))
# number go groups only found by method i
nrow(setdiff(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust < 0.05)%>%
select(GO.ID)))
# number go groups only found by method ii
nrow(setdiff(GO_method2_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05)%>%
select(GO.ID)))
# number go groups found by method i and ii
nrow(intersect(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust < 0.05)%>%
select(GO.ID)))
876 + 129
dim(GO_method2_up$gen_table %>% filter(Fisher.elim_adjust < 0.05)%>%
select(GO.ID))
876 + 129
nrow(setdiff(GO_method2_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05)%>%
select(GO.ID)))
# number go groups found by method i and ii
nrow(intersect(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust < 0.05)%>%
select(GO.ID)))
nrow(setdiff(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher.elim_adjust < 0.05)%>%
select(GO.ID)))
876+640
dim(GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID))
nrow(setdiff(GO_method2_up$gen_table %>% filter(Fisher.elim_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method1_up$gen_table %>% filter(Fisher.elim_adjust < 0.05)%>%
select(GO.ID)))
# necessary data for plot
selected_GO_method_1 <- GO_method1_up$gen_table %>%
dplyr::select(GO.ID, Fisher.elim_adjust)
selected_GO_method_2 <- GO_method2_up$gen_table %>%
dplyr::select(GO.ID, Fisher.elim_adjust)
# find GO Groups that are in both GO analyses
common_go <- intersect(selected_GO_method_1$GO.ID, selected_GO_method_2$GO.ID)
# create data.frame for plot
plot_GO_data <- data.frame("GO_group" = common_go, "method_i_p_values" = selected_GO_method_1[selected_GO_method_1$GO.ID %in% common_go, 2],
"method_ii_p_values" = selected_GO_method_2[selected_GO_method_2$GO.ID %in% common_go, 2])
ggplot(plot_GO_data, aes(x = method_i_p_values, y = method_ii_p_values)) +
geom_point() +
coord_fixed() +
theme_classic() +
geom_abline( intercept = 0, slope = 1) +
xlab("p-value for GO-Group with Method I") +
ylab("p-value for GO-Group with Method II")
ggsave("080_go_groups_pvalue.pdf")
topGO_analysis <- function(interesting, all_genes, methods = "elim", topNodes = TRUE, node_number){
# create topGo object
go_data <- topGOdataObj(interesting.genes = interesting,
gene.names = all_genes)
# apply method to topGo Object
res <- sapply(methods,
function(x) runTest(go_data, algorithm = x, statistic = "fisher"))
if(methods == "elim"){
if(topNodes){
res$gen_table <- GenTable(go_data,
Fisher = res$elim,
orderBy = "Fisher_elim", topNodes = node_number)
}
else{
res$gen_table <- GenTable(go_data,
Fisher = res$elim,
orderBy = "Fisher_elim", topNodes = length(res$elim@score))
}
res$gen_table$Fisher <- as.numeric(res$gen_table$Fisher)
if(any(is.na(res$gen_table$Fisher))){
res$gen_table$Fisher[is.na(res$gen_table$Fisher)] <- 1e-30
}
## adjust the p-values
res$gen_table$Fisher_adjust <- p.adjust(res$gen_table$Fisher, method = "fdr")
}
if(methods == "classic"){
if(topNodes){
res$gen_table <- GenTable(go_data,
Fisher = res$classic,
orderBy = "Fisher_elim", topNodes = node_number)
}else{
res$gen_table <- GenTable(go_data,
Fisher = res$classic,
orderBy = "Fisher_elim", topNodes = length(res$classic@score))
}
res$gen_table$Fisher <- as.numeric(res$gen_table$Fisher)
if(any(is.na(res$gen_table$Fisher))){
res$gen_table$Fisher[is.na(res$gen_table$Fisher)] <- 1e-30
}
## adjust the p-values
res$gen_table$Fisher_adjust <- p.adjust(res$gen_table$Fisher, method = "fdr")
}
return(res)
}
# top 10 GO Groups method i only
GO_method1_up$gen_table %>% filter(GO.ID %in% intersect(
# significant groups in Method I
GO_method1_up$gen_table %>% filter(Fisher_adjust < 0.05) %>%
select(GO.ID),
# not significant groups in Method II
GO_method2_up$gen_table %>% filter(Fisher_adjust > 0.05) %>%
select(GO.ID)
)$GO.ID) %>% arrange(Fisher_adjust) %>% head(10)
set.seed(1234)
GO_method1_up <- topGO_analysis(interesting = deg_mod_1_up, all_genes = rownames(dds_method1),
methods = "classic", topNodes = TRUE, node_number = 1000)
# Genes that are DEG by Method II and have a positive log2FC
# Note: res_mod2 already fitlered by log2FC and adj. p-value
deg_mod2_up <- rownames(res_mod2)[res_mod2$log2FoldChange > 0]
GO_method2_up <- topGO_analysis(interesting = deg_mod2_up, all_genes = rownames(dds_method2),
methods = "classic", topNodes = TRUE, node_number = 1000)
# GO analysis on genes that are found by Method I, Method II or both (up-regulated)
GO_method1_or2_up <- topGO_analysis(interesting = unique(c(deg_mod_1_up, deg_mod2_up)),
all_genes = unique(c(rownames(dds_method1), rownames(dds_method2))),
methods = "classic", topNodes = TRUE, node_number = 1000)
# GO analysis on genes that are upregulated and only found by Method II
GO_only_method2_up <- topGO_analysis(interesting = setdiff(deg_mod2_up, deg_mod_1_up), all_genes = rownames(dds_method2),
methods = "classic", topNodes = TRUE, node_number = 1000)
GO_only_method1_up <- topGO_analysis(interesting = setdiff(deg_mod_1_up, deg_mod2_up), all_genes = rownames(dds_method2),
methods = "classic", topNodes = TRUE, node_number = 1000)
save(GO_method1_up, GO_method2_up, GO_method1_or2_up,
GO_only_method2_up, GO_only_method1_up, deg_mod2_up,
file = "051_GO_res_classic_1000.RData")
set.seed(1234)
GO_method1_up_elim <- topGO_analysis(interesting = deg_mod_1_up, all_genes = rownames(dds_method1),
methods = "elim", topNodes = TRUE, node_number = 1000)
# Genes that are DEG by Method II and have a positive log2FC
# Note: res_mod2 already fitlered by log2FC and adj. p-value
deg_mod2_up <- rownames(res_mod2)[res_mod2$log2FoldChange > 0]
GO_method2_up_elim <- topGO_analysis(interesting = deg_mod2_up, all_genes = rownames(dds_method2),
methods = "elim", topNodes = TRUE, node_number = 1000)
# GO analysis on genes that are found by Method I, Method II or both (up-regulated)
GO_method1_or2_up_elim <- topGO_analysis(interesting = unique(c(deg_mod_1_up, deg_mod2_up)),
all_genes = unique(c(rownames(dds_method1), rownames(dds_method2))),
methods = "elim", topNodes = TRUE, node_number = 1000)
# GO analysis on genes that are upregulated and only found by Method II
GO_only_method2_up_elim <- topGO_analysis(interesting = setdiff(deg_mod2_up, deg_mod_1_up), all_genes = rownames(dds_method2),
methods = "elim", topNodes = TRUE, node_number = 1000)
GO_only_method1_up_elim <- topGO_analysis(interesting = setdiff(deg_mod_1_up, deg_mod2_up), all_genes = rownames(dds_method2),
methods = "elim", topNodes = TRUE, node_number = 1000)
save(GO_method1_up_elim, GO_method2_up_elim, GO_method1_or2_up_elim,
GO_only_method2_up_elim, GO_only_method1_up_elim,
deg_mod2_up,
file = "053_GO_res_elim_1000.RData")
set.seed(1234)
GO_method1_up_all <- topGO_analysis(interesting = deg_mod_1_up, all_genes = rownames(dds_method1),
methods = "classic", topNodes = FALSE)
# Genes that are DEG by Method II and have a positive log2FC
# Note: res_mod2 already fitlered by log2FC and adj. p-value
deg_mod2_up <- rownames(res_mod2)[res_mod2$log2FoldChange > 0]
GO_method2_up_all <- topGO_analysis(interesting = deg_mod2_up, all_genes = rownames(dds_method2),
methods = "classic", topNodes = FALSE)
# GO analysis on genes that are found by Method I, Method II or both (up-regulated)
# GO_method1_or2_up <- topGO_analysis(interesting = unique(c(deg_mod_1_up, deg_mod2_up)),
#                                     all_genes = unique(c(rownames(dds_method1), rownames(dds_method2))),
#                                     methods = "classic", topNodes = TRUE, node_number = 2000)
#
# # GO analysis on genes that are upregulated and only found by Method II
# GO_only_method2_up <- topGO_analysis(interesting = setdiff(deg_mod2_up, deg_mod_1_up), all_genes = rownames(dds_method2),
#                                      methods = "classic", topNodes = TRUE, node_number = 2000)
# GO_only_method1_up <- topGO_analysis(interesting = setdiff(deg_mod_1_up, deg_mod2_up), all_genes = rownames(dds_method2),
#                                      methods = "classic", topNodes = TRUE, node_number = 1000)
save(GO_method1_up_all, GO_method2_up_all, #GO_method1_or2_up,
#GO_only_method2_up, GO_only_method1_up,
deg_mod2_up,
file = "055_GO_res_classic_all.RData")
xtable(cbind(GO_method1_up_elim$gen_table[1:15, c("Term", "Fisher_adjust")] %>%
mutate('Method I' = paste0(Term, " (", signif(Fisher_adjust, 3),")")) %>%
dplyr::select('Method I'),
GO_method2_up_elim$gen_table[1:15, c("Term", "Fisher_adjust")] %>%
mutate('Method II' = paste0(Term, " (", signif(Fisher_adjust, 3),")"))%>%
dplyr::select('Method II'),
GO_method1_or2_up_elim$gen_table[1:15, c("Term", "Fisher_adjust")] %>%
mutate('Method I or II' = paste0(Term, " (", signif(Fisher_adjust, 3),")"))%>%
dplyr::select('Method I or II')))
