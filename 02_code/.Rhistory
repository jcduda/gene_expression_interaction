res$gen_table$Fisher.elim_adjust <- p.adjust(res$gen_table$Fisher.elim, method = "fdr")
}
if(methods == "classic"){
res$gen_table <- GenTable(go_data,
Fisher.elim = res$classic,
orderBy = "Fisher_elim", topNodes = topNodes)
res$gen_table$Fisher.elim <- as.numeric(res$gen_table$Fisher.elim)
if(any(is.na(res$gen_table$Fisher.elim))){
res$gen_table$Fisher.elim[is.na(res$gen_table$Fisher.elim)] <- 1e-30
## adjust the p-values
res$gen_table$Fisher.elim_adjust <- p.adjust(res$gen_table$Fisher.elim, method = "fdr")
}
}
return(res)
topGO_analysis <- function(interesting, all_genes, methods = "elim", topNodes = 1000){
# create topGo object
go_data <- topGOdataObj(interesting.genes = interesting,
gene.names = all_genes)
# apply method to topGo Object
res <- sapply(methods,
function(x) runTest(go_data, algorithm = x, statistic = "fisher"))
# res$weight.log <- runTest(GOdata, algorithm = "weight", statistic = "fisher", sigRatio = "log")
# res$parentchild.intersect <- runTest(GOdata, algorithm = "parentchild", statistic = "fisher", joinFun = "intersect")
if(methods == "elim"){
res$gen_table <- GenTable(go_data,
Fisher.elim = res$elim,
orderBy = "Fisher_elim", topNodes = topNodes)
res$gen_table$Fisher.elim <- as.numeric(res$gen_table$Fisher.elim)
if(any(is.na(res$gen_table$Fisher.elim))){
res$gen_table$Fisher.elim[is.na(res$gen_table$Fisher.elim)] <- 1e-30
## adjust the p-values
res$gen_table$Fisher.elim_adjust <- p.adjust(res$gen_table$Fisher.elim, method = "fdr")
}
}
if(methods == "classic"){
res$gen_table <- GenTable(go_data,
Fisher.elim = res$classic,
orderBy = "Fisher_elim", topNodes = topNodes)
res$gen_table$Fisher.elim <- as.numeric(res$gen_table$Fisher.elim)
if(any(is.na(res$gen_table$Fisher.elim))){
res$gen_table$Fisher.elim[is.na(res$gen_table$Fisher.elim)] <- 1e-30
## adjust the p-values
res$gen_table$Fisher.elim_adjust <- p.adjust(res$gen_table$Fisher.elim, method = "fdr")
}
}
return(res)
}
set.seed(1234)
GO_method1_up <- topGO_analysis(interesting = deg_mod_1_up, all_genes = rownames(dds_method1),
methods = "classic", topNodes = 1000)
set.seed(1234)
GO_method1_up <- topGO_analysis(interesting = deg_mod_1_up, all_genes = rownames(dds_method1),
methods = "classic", topNodes = 2000)
# Genes that are DEG by Method II and have a positive log2FC
# Note: res_mod2 already fitlered by log2FC and adj. p-value
deg_mod2_up <- rownames(res_mod2)[res_mod2$log2FoldChange > 0]
GO_method2_up <- topGO_analysis(interesting = deg_mod2_up, all_genes = rownames(dds_method2),
methods = "classic", topNodes = 2000)
# GO analysis on genes that are found by Method I, Method II or both (up-regulated)
# GO_method1_or2_up <- topGO_analysis(interesting = unique(c(deg_mod_1_up, deg_mod2_up)),
#                                     all_genes = unique(c(rownames(dds_method1), rownames(dds_method2))),
#                                     methods = "classic", topNodes = 2000)
#
# # GO analysis on genes that are upregulated and only found by Method II
# GO_only_method2_up <- topGO_analysis(interesting = setdiff(deg_mod2_up, deg_mod_1_up), all_genes = rownames(dds_method2),
#                                      methods = "classic", topNodes = 2000)
# GO_only_method1_up <- topGO_analysis(interesting = setdiff(deg_mod_1_up, deg_mod2_up), all_genes = rownames(dds_method2),
#                                      methods = "classic", topNodes = 1000)
save(GO_method1_up, GO_method2_up, #GO_method1_or2_up,
#GO_only_method2_up, GO_only_method1_up,
deg_mod2_up,
file = "052_GO_res_classic_2000.RData")
# necessary data for plot
selected_GO_method_1 <- GO_method1_up$gen_table %>%
dplyr::select(GO.ID, Fisher.elim_adjust)
selected_GO_method_2 <- GO_method2_up$gen_table %>%
dplyr::select(GO.ID, Fisher.elim_adjust)
# find GO Groups that are in both GO analyses
common_go <- intersect(selected_GO_method_1$GO.ID, selected_GO_method_2$GO.ID)
# create data.frame for plot
plot_GO_data <- data.frame("GO_group" = common_go, "method_i_p_values" = selected_GO_method_1[selected_GO_method_1$GO.ID %in% common_go, 2],
"method_ii_p_values" = selected_GO_method_2[selected_GO_method_2$GO.ID %in% common_go, 2])
ggplot(plot_GO_data, aes(x = method_i_p_values, y = method_ii_p_values)) +
geom_point() +
coord_fixed() +
theme_classic() +
geom_abline( intercept = 0, slope = 1) +
xlab("p-value for GO-Group with Method I") +
ylab("p-value for GO-Group with Method II")
set.seed(1234)
GO_method1_up <- topGO_analysis(interesting = deg_mod_1_up, all_genes = rownames(dds_method1),
methods = "classic", topNodes = 1000)
# Genes that are DEG by Method II and have a positive log2FC
# Note: res_mod2 already fitlered by log2FC and adj. p-value
deg_mod2_up <- rownames(res_mod2)[res_mod2$log2FoldChange > 0]
GO_method2_up <- topGO_analysis(interesting = deg_mod2_up, all_genes = rownames(dds_method2),
methods = "classic", topNodes = 1000)
# GO analysis on genes that are found by Method I, Method II or both (up-regulated)
GO_method1_or2_up <- topGO_analysis(interesting = unique(c(deg_mod_1_up, deg_mod2_up)),
all_genes = unique(c(rownames(dds_method1), rownames(dds_method2))),
methods = "classic", topNodes = 1000)
# GO analysis on genes that are upregulated and only found by Method II
GO_only_method2_up <- topGO_analysis(interesting = setdiff(deg_mod2_up, deg_mod_1_up), all_genes = rownames(dds_method2),
methods = "classic", topNodes = 1000)
GO_only_method1_up <- topGO_analysis(interesting = setdiff(deg_mod_1_up, deg_mod2_up), all_genes = rownames(dds_method2),
methods = "classic", topNodes = 1000)
save(GO_method1_up, GO_method2_up, GO_method1_or2_up,
GO_only_method2_up, GO_only_method1_up, deg_mod2_up,
file = "051_GO_res_classic_1000.RData")
selected_GO_method_1 <- GO_method1_up$gen_table %>%
dplyr::select(GO.ID, Fisher.elim_adjust)
selected_GO_method_2 <- GO_method2_up$gen_table %>%
dplyr::select(GO.ID, Fisher.elim_adjust)
# find GO Groups that are in both GO analyses
common_go <- intersect(selected_GO_method_1$GO.ID, selected_GO_method_2$GO.ID)
# create data.frame for plot
plot_GO_data <- data.frame("GO_group" = common_go, "method_i_p_values" = selected_GO_method_1[selected_GO_method_1$GO.ID %in% common_go, 2],
"method_ii_p_values" = selected_GO_method_2[selected_GO_method_2$GO.ID %in% common_go, 2])
ggplot(plot_GO_data, aes(x = method_i_p_values, y = method_ii_p_values)) +
geom_point() +
coord_fixed() +
theme_classic() +
geom_abline( intercept = 0, slope = 1) +
xlab("p-value for GO-Group with Method I") +
ylab("p-value for GO-Group with Method II")
# create data.frame for plot
plot_GO_data <- data.frame("GO_group" = common_go, "method_i_p_values" = log(selected_GO_method_1[selected_GO_method_1$GO.ID %in% common_go, 2]),
"method_ii_p_values" = log(selected_GO_method_2[selected_GO_method_2$GO.ID %in% common_go, 2]))
ggplot(plot_GO_data, aes(x = method_i_p_values, y = method_ii_p_values)) +
geom_point() +
coord_fixed() +
theme_classic() +
geom_abline( intercept = 0, slope = 1) +
xlab("p-value for GO-Group with Method I") +
ylab("p-value for GO-Group with Method II")
# create data.frame for plot
plot_GO_data <- data.frame("GO_group" = common_go, "method_i_p_values" = selected_GO_method_1[selected_GO_method_1$GO.ID %in% common_go, 2],
"method_ii_p_values" = selected_GO_method_2[selected_GO_method_2$GO.ID %in% common_go, 2])
ggplot(plot_GO_data, aes(x = method_i_p_values, y = method_ii_p_values)) +
geom_point() +
#coord_fixed() +
theme_classic() +
geom_abline( intercept = 0, slope = 1) +
xlab("p-value for GO-Group with Method I") +
ylab("p-value for GO-Group with Method II")
set.seed(1234)
GO_method1_up <- topGO_analysis(interesting = deg_mod_1_up, all_genes = rownames(dds_method1),
methods = "elim", topNodes = 2000)
# Genes that are DEG by Method II and have a positive log2FC
# Note: res_mod2 already fitlered by log2FC and adj. p-value
deg_mod2_up <- rownames(res_mod2)[res_mod2$log2FoldChange > 0]
GO_method2_up <- topGO_analysis(interesting = deg_mod2_up, all_genes = rownames(dds_method2),
methods = "elim", topNodes = 2000)
# # GO analysis on genes that are found by Method I, Method II or both (up-regulated)
# GO_method1_or2_up <- topGO_analysis(interesting = unique(c(deg_mod_1_up, deg_mod2_up)),
#                                     all_genes = unique(c(rownames(dds_method1), rownames(dds_method2))),
#                                     methods = "elim", topNodes = 1000)
#
# # GO analysis on genes that are upregulated and only found by Method II
# GO_only_method2_up <- topGO_analysis(interesting = setdiff(deg_mod2_up, deg_mod_1_up), all_genes = rownames(dds_method2),
#                                      methods = "elim", topNodes = 1000)
# GO_only_method1_up <- topGO_analysis(interesting = setdiff(deg_mod_1_up, deg_mod2_up), all_genes = rownames(dds_method2),
#                                      methods = "elim", topNodes = 1000)
#
save(GO_method1_up, GO_method2_up, #GO_method1_or2_up,
#GO_only_method2_up, GO_only_method1_up,
deg_mod2_up,
file = "053_GO_res_elim_2000.RData")
save(GO_method1_up, GO_method2_up, #GO_method1_or2_up,
#GO_only_method2_up, GO_only_method1_up,
deg_mod2_up,
file = "054_GO_res_elim_2000.RData")
selected_GO_method_1 <- GO_method1_up$gen_table %>%
dplyr::select(GO.ID, Fisher.elim_adjust)
# necessary data for plot
selected_GO_method_1 <- GO_method1_up$gen_table %>%
dplyr::select(GO.ID, Fisher.elim_adjust)
topGO_analysis <- function(interesting, all_genes, methods = "elim", topNodes = 1000){
# create topGo object
go_data <- topGOdataObj(interesting.genes = interesting,
gene.names = all_genes)
# apply method to topGo Object
res <- sapply(methods,
function(x) runTest(go_data, algorithm = x, statistic = "fisher"))
# res$weight.log <- runTest(GOdata, algorithm = "weight", statistic = "fisher", sigRatio = "log")
# res$parentchild.intersect <- runTest(GOdata, algorithm = "parentchild", statistic = "fisher", joinFun = "intersect")
if(methods == "elim"){
res$gen_table <- GenTable(go_data,
Fisher.elim = res$elim,
orderBy = "Fisher_elim", topNodes = topNodes)
res$gen_table$Fisher.elim <- as.numeric(res$gen_table$Fisher.elim)
if(any(is.na(res$gen_table$Fisher.elim))){
res$gen_table$Fisher.elim[is.na(res$gen_table$Fisher.elim)] <- 1e-30
}
## adjust the p-values
res$gen_table$Fisher.elim_adjust <- p.adjust(res$gen_table$Fisher.elim, method = "fdr")
}
if(methods == "classic"){
res$gen_table <- GenTable(go_data,
Fisher.elim = res$classic,
orderBy = "Fisher_elim", topNodes = topNodes)
res$gen_table$Fisher.elim <- as.numeric(res$gen_table$Fisher.elim)
if(any(is.na(res$gen_table$Fisher.elim))){
res$gen_table$Fisher.elim[is.na(res$gen_table$Fisher.elim)] <- 1e-30
}
## adjust the p-values
res$gen_table$Fisher.elim_adjust <- p.adjust(res$gen_table$Fisher.elim, method = "fdr")
}
return(res)
}
set.seed(1234)
GO_method1_up <- topGO_analysis(interesting = deg_mod_1_up, all_genes = rownames(dds_method1),
methods = "elim", topNodes = 2000)
# Genes that are DEG by Method II and have a positive log2FC
# Note: res_mod2 already fitlered by log2FC and adj. p-value
deg_mod2_up <- rownames(res_mod2)[res_mod2$log2FoldChange > 0]
GO_method2_up <- topGO_analysis(interesting = deg_mod2_up, all_genes = rownames(dds_method2),
methods = "elim", topNodes = 2000)
# # GO analysis on genes that are found by Method I, Method II or both (up-regulated)
# GO_method1_or2_up <- topGO_analysis(interesting = unique(c(deg_mod_1_up, deg_mod2_up)),
#                                     all_genes = unique(c(rownames(dds_method1), rownames(dds_method2))),
#                                     methods = "elim", topNodes = 1000)
#
# # GO analysis on genes that are upregulated and only found by Method II
# GO_only_method2_up <- topGO_analysis(interesting = setdiff(deg_mod2_up, deg_mod_1_up), all_genes = rownames(dds_method2),
#                                      methods = "elim", topNodes = 1000)
# GO_only_method1_up <- topGO_analysis(interesting = setdiff(deg_mod_1_up, deg_mod2_up), all_genes = rownames(dds_method2),
#                                      methods = "elim", topNodes = 1000)
#
save(GO_method1_up, GO_method2_up, #GO_method1_or2_up,
#GO_only_method2_up, GO_only_method1_up,
deg_mod2_up,
file = "054_GO_res_elim_2000.RData")
selected_GO_method_1 <- GO_method1_up$gen_table %>%
dplyr::select(GO.ID, Fisher.elim_adjust)
selected_GO_method_2 <- GO_method2_up$gen_table %>%
dplyr::select(GO.ID, Fisher.elim_adjust)
# find GO Groups that are in both GO analyses
common_go <- intersect(selected_GO_method_1$GO.ID, selected_GO_method_2$GO.ID)
# create data.frame for plot
plot_GO_data <- data.frame("GO_group" = common_go, "method_i_p_values" = selected_GO_method_1[selected_GO_method_1$GO.ID %in% common_go, 2],
"method_ii_p_values" = selected_GO_method_2[selected_GO_method_2$GO.ID %in% common_go, 2])
ggplot(plot_GO_data, aes(x = method_i_p_values, y = method_ii_p_values)) +
geom_point() +
#coord_fixed() +
theme_classic() +
geom_abline( intercept = 0, slope = 1) +
xlab("p-value for GO-Group with Method I") +
ylab("p-value for GO-Group with Method II")
ggplot(plot_GO_data, aes(x = method_i_p_values, y = method_ii_p_values)) +
geom_point() +
coord_fixed() +
theme_classic() +
geom_abline( intercept = 0, slope = 1) +
xlab("p-value for GO-Group with Method I") +
ylab("p-value for GO-Group with Method II")
# using method classic and top 2000 genes
if(file.exists("054_GO_res_elim_2000.RData")){
load("054_GO_res_elim_2000.RData")
} else {
set.seed(1234)
GO_method1_up <- topGO_analysis(interesting = deg_mod_1_up, all_genes = rownames(dds_method1),
methods = "elim", topNodes = 2000)
# Genes that are DEG by Method II and have a positive log2FC
# Note: res_mod2 already fitlered by log2FC and adj. p-value
deg_mod2_up <- rownames(res_mod2)[res_mod2$log2FoldChange > 0]
GO_method2_up <- topGO_analysis(interesting = deg_mod2_up, all_genes = rownames(dds_method2),
methods = "elim", topNodes = 2000)
# # GO analysis on genes that are found by Method I, Method II or both (up-regulated)
# GO_method1_or2_up <- topGO_analysis(interesting = unique(c(deg_mod_1_up, deg_mod2_up)),
#                                     all_genes = unique(c(rownames(dds_method1), rownames(dds_method2))),
#                                     methods = "elim", topNodes = 1000)
#
# # GO analysis on genes that are upregulated and only found by Method II
# GO_only_method2_up <- topGO_analysis(interesting = setdiff(deg_mod2_up, deg_mod_1_up), all_genes = rownames(dds_method2),
#                                      methods = "elim", topNodes = 1000)
# GO_only_method1_up <- topGO_analysis(interesting = setdiff(deg_mod_1_up, deg_mod2_up), all_genes = rownames(dds_method2),
#                                      methods = "elim", topNodes = 1000)
#
save(GO_method1_up, GO_method2_up, #GO_method1_or2_up,
#GO_only_method2_up, GO_only_method1_up,
deg_mod2_up,
file = "054_GO_res_elim_2000.RData")
}
# find GO Groups that are in both GO analyses
common_go <- intersect(selected_GO_method_1$GO.ID, selected_GO_method_2$GO.ID)
# create data.frame for plot
plot_GO_data <- data.frame("GO_group" = common_go, "method_i_p_values" = selected_GO_method_1[selected_GO_method_1$GO.ID %in% common_go, 2],
"method_ii_p_values" = selected_GO_method_2[selected_GO_method_2$GO.ID %in% common_go, 2])
ggplot(plot_GO_data, aes(x = method_i_p_values, y = method_ii_p_values)) +
geom_point() +
coord_fixed() +
theme_classic() +
geom_abline( intercept = 0, slope = 1) +
xlab("p-value for GO-Group with Method I") +
ylab("p-value for GO-Group with Method II")
# using method classic and top 1000 genes
if(file.exists("051_GO_res_classic_1000.RData")){
load("051_GO_res_classic_1000.RData")
} else {
set.seed(1234)
GO_method1_up <- topGO_analysis(interesting = deg_mod_1_up, all_genes = rownames(dds_method1),
methods = "classic", topNodes = 1000)
# Genes that are DEG by Method II and have a positive log2FC
# Note: res_mod2 already fitlered by log2FC and adj. p-value
deg_mod2_up <- rownames(res_mod2)[res_mod2$log2FoldChange > 0]
GO_method2_up <- topGO_analysis(interesting = deg_mod2_up, all_genes = rownames(dds_method2),
methods = "classic", topNodes = 1000)
# GO analysis on genes that are found by Method I, Method II or both (up-regulated)
GO_method1_or2_up <- topGO_analysis(interesting = unique(c(deg_mod_1_up, deg_mod2_up)),
all_genes = unique(c(rownames(dds_method1), rownames(dds_method2))),
methods = "classic", topNodes = 1000)
# GO analysis on genes that are upregulated and only found by Method II
GO_only_method2_up <- topGO_analysis(interesting = setdiff(deg_mod2_up, deg_mod_1_up), all_genes = rownames(dds_method2),
methods = "classic", topNodes = 1000)
GO_only_method1_up <- topGO_analysis(interesting = setdiff(deg_mod_1_up, deg_mod2_up), all_genes = rownames(dds_method2),
methods = "classic", topNodes = 1000)
save(GO_method1_up, GO_method2_up, GO_method1_or2_up,
GO_only_method2_up, GO_only_method1_up, deg_mod2_up,
file = "051_GO_res_classic_1000.RData")
}
if(file.exists("051_GO_res_classic_1000.RData")){
load("051_GO_res_classic_1000.RData")
} else {
set.seed(1234)
GO_method1_up <- topGO_analysis(interesting = deg_mod_1_up, all_genes = rownames(dds_method1),
methods = "classic", topNodes = 1000)
# Genes that are DEG by Method II and have a positive log2FC
# Note: res_mod2 already fitlered by log2FC and adj. p-value
deg_mod2_up <- rownames(res_mod2)[res_mod2$log2FoldChange > 0]
GO_method2_up <- topGO_analysis(interesting = deg_mod2_up, all_genes = rownames(dds_method2),
methods = "classic", topNodes = 1000)
# GO analysis on genes that are found by Method I, Method II or both (up-regulated)
GO_method1_or2_up <- topGO_analysis(interesting = unique(c(deg_mod_1_up, deg_mod2_up)),
all_genes = unique(c(rownames(dds_method1), rownames(dds_method2))),
methods = "classic", topNodes = 1000)
# GO analysis on genes that are upregulated and only found by Method II
GO_only_method2_up <- topGO_analysis(interesting = setdiff(deg_mod2_up, deg_mod_1_up), all_genes = rownames(dds_method2),
methods = "classic", topNodes = 1000)
GO_only_method1_up <- topGO_analysis(interesting = setdiff(deg_mod_1_up, deg_mod2_up), all_genes = rownames(dds_method2),
methods = "classic", topNodes = 1000)
save(GO_method1_up, GO_method2_up, GO_method1_or2_up,
GO_only_method2_up, GO_only_method1_up, deg_mod2_up,
file = "051_GO_res_classic_1000.RData")
}
# necessary data for plot
selected_GO_method_1 <- GO_method1_up$gen_table %>%
dplyr::select(GO.ID, Fisher.elim_adjust)
selected_GO_method_2 <- GO_method2_up$gen_table %>%
dplyr::select(GO.ID, Fisher.elim_adjust)
# find GO Groups that are in both GO analyses
common_go <- intersect(selected_GO_method_1$GO.ID, selected_GO_method_2$GO.ID)
# create data.frame for plot
plot_GO_data <- data.frame("GO_group" = common_go, "method_i_p_values" = selected_GO_method_1[selected_GO_method_1$GO.ID %in% common_go, 2],
"method_ii_p_values" = selected_GO_method_2[selected_GO_method_2$GO.ID %in% common_go, 2])
ggplot(plot_GO_data, aes(x = method_i_p_values, y = method_ii_p_values)) +
geom_point() +
coord_fixed() +
theme_classic() +
geom_abline( intercept = 0, slope = 1) +
xlab("p-value for GO-Group with Method I") +
ylab("p-value for GO-Group with Method II")
ggplot(plot_GO_data, aes(x = method_i_p_values, y = method_ii_p_values)) +
geom_point() +
#coord_fixed() +
theme_classic() +
geom_abline( intercept = 0, slope = 1) +
xlab("p-value for GO-Group with Method I") +
ylab("p-value for GO-Group with Method II")
# using method classic and top 1000 genes
if(file.exists("053_GO_res_elim_1000.RData")){
load("053_GO_res_elim_1000.RData")
} else {
set.seed(1234)
GO_method1_up <- topGO_analysis(interesting = deg_mod_1_up, all_genes = rownames(dds_method1),
methods = "elim", topNodes = 1000)
# Genes that are DEG by Method II and have a positive log2FC
# Note: res_mod2 already fitlered by log2FC and adj. p-value
deg_mod2_up <- rownames(res_mod2)[res_mod2$log2FoldChange > 0]
GO_method2_up <- topGO_analysis(interesting = deg_mod2_up, all_genes = rownames(dds_method2),
methods = "elim", topNodes = 1000)
# # GO analysis on genes that are found by Method I, Method II or both (up-regulated)
# GO_method1_or2_up <- topGO_analysis(interesting = unique(c(deg_mod_1_up, deg_mod2_up)),
#                                     all_genes = unique(c(rownames(dds_method1), rownames(dds_method2))),
#                                     methods = "elim", topNodes = 1000)
#
# # GO analysis on genes that are upregulated and only found by Method II
# GO_only_method2_up <- topGO_analysis(interesting = setdiff(deg_mod2_up, deg_mod_1_up), all_genes = rownames(dds_method2),
#                                      methods = "elim", topNodes = 1000)
# GO_only_method1_up <- topGO_analysis(interesting = setdiff(deg_mod_1_up, deg_mod2_up), all_genes = rownames(dds_method2),
#                                      methods = "elim", topNodes = 1000)
#
save(GO_method1_up, GO_method2_up, #GO_method1_or2_up,
#GO_only_method2_up, GO_only_method1_up,
deg_mod2_up,
file = "053_GO_res_elim_1000.RData")
}
GO_method2_up$gen_table[1:15, c("Term", "Fisher.elim_adjust")] %>%
mutate('Method II' = paste0(Term, " (", signif(Fisher.elim_adjust, 3),")"))%>%
dplyr::select('Method II'),
# necessary data for plot
selected_GO_method_1 <- GO_method1_up$gen_table %>%
dplyr::select(GO.ID, Fisher.elim_adjust)
selected_GO_method_2 <- GO_method2_up$gen_table %>%
dplyr::select(GO.ID, Fisher.elim_adjust)
# find GO Groups that are in both GO analyses
common_go <- intersect(selected_GO_method_1$GO.ID, selected_GO_method_2$GO.ID)
# create data.frame for plot
plot_GO_data <- data.frame("GO_group" = common_go, "method_i_p_values" = selected_GO_method_1[selected_GO_method_1$GO.ID %in% common_go, 2],
"method_ii_p_values" = selected_GO_method_2[selected_GO_method_2$GO.ID %in% common_go, 2])
ggplot(plot_GO_data, aes(x = method_i_p_values, y = method_ii_p_values)) +
geom_point() +
#coord_fixed() +
theme_classic() +
geom_abline( intercept = 0, slope = 1) +
xlab("p-value for GO-Group with Method I") +
ylab("p-value for GO-Group with Method II")
ggplot(plot_GO_data, aes(x = method_i_p_values, y = method_ii_p_values)) +
geom_point() +
coord_fixed() +
theme_classic() +
geom_abline( intercept = 0, slope = 1) +
xlab("p-value for GO-Group with Method I") +
ylab("p-value for GO-Group with Method II")
# using method classic and top 2000 genes
if(file.exists("054_GO_res_elim_2000.RData")){
load("054_GO_res_elim_2000.RData")
} else {
set.seed(1234)
GO_method1_up <- topGO_analysis(interesting = deg_mod_1_up, all_genes = rownames(dds_method1),
methods = "elim", topNodes = 2000)
# Genes that are DEG by Method II and have a positive log2FC
# Note: res_mod2 already fitlered by log2FC and adj. p-value
deg_mod2_up <- rownames(res_mod2)[res_mod2$log2FoldChange > 0]
GO_method2_up <- topGO_analysis(interesting = deg_mod2_up, all_genes = rownames(dds_method2),
methods = "elim", topNodes = 2000)
# # GO analysis on genes that are found by Method I, Method II or both (up-regulated)
# GO_method1_or2_up <- topGO_analysis(interesting = unique(c(deg_mod_1_up, deg_mod2_up)),
#                                     all_genes = unique(c(rownames(dds_method1), rownames(dds_method2))),
#                                     methods = "elim", topNodes = 1000)
#
# # GO analysis on genes that are upregulated and only found by Method II
# GO_only_method2_up <- topGO_analysis(interesting = setdiff(deg_mod2_up, deg_mod_1_up), all_genes = rownames(dds_method2),
#                                      methods = "elim", topNodes = 1000)
# GO_only_method1_up <- topGO_analysis(interesting = setdiff(deg_mod_1_up, deg_mod2_up), all_genes = rownames(dds_method2),
#                                      methods = "elim", topNodes = 1000)
#
save(GO_method1_up, GO_method2_up, #GO_method1_or2_up,
#GO_only_method2_up, GO_only_method1_up,
deg_mod2_up,
file = "054_GO_res_elim_2000.RData")
}
# necessary data for plot
selected_GO_method_1 <- GO_method1_up$gen_table %>%
dplyr::select(GO.ID, Fisher.elim_adjust)
selected_GO_method_2 <- GO_method2_up$gen_table %>%
dplyr::select(GO.ID, Fisher.elim_adjust)
# find GO Groups that are in both GO analyses
common_go <- intersect(selected_GO_method_1$GO.ID, selected_GO_method_2$GO.ID)
# create data.frame for plot
plot_GO_data <- data.frame("GO_group" = common_go, "method_i_p_values" = selected_GO_method_1[selected_GO_method_1$GO.ID %in% common_go, 2],
"method_ii_p_values" = selected_GO_method_2[selected_GO_method_2$GO.ID %in% common_go, 2])
ggplot(plot_GO_data, aes(x = method_i_p_values, y = method_ii_p_values)) +
geom_point() +
coord_fixed() +
theme_classic() +
geom_abline( intercept = 0, slope = 1) +
xlab("p-value for GO-Group with Method I") +
ylab("p-value for GO-Group with Method II")
if(file.exists("052_GO_res_classic_2000.RData")){
load("052_GO_res_classic_2000.RData")
} else {
set.seed(1234)
GO_method1_up <- topGO_analysis(interesting = deg_mod_1_up, all_genes = rownames(dds_method1),
methods = "classic", topNodes = 2000)
# Genes that are DEG by Method II and have a positive log2FC
# Note: res_mod2 already fitlered by log2FC and adj. p-value
deg_mod2_up <- rownames(res_mod2)[res_mod2$log2FoldChange > 0]
GO_method2_up <- topGO_analysis(interesting = deg_mod2_up, all_genes = rownames(dds_method2),
methods = "classic", topNodes = 2000)
# GO analysis on genes that are found by Method I, Method II or both (up-regulated)
# GO_method1_or2_up <- topGO_analysis(interesting = unique(c(deg_mod_1_up, deg_mod2_up)),
#                                     all_genes = unique(c(rownames(dds_method1), rownames(dds_method2))),
#                                     methods = "classic", topNodes = 2000)
#
# # GO analysis on genes that are upregulated and only found by Method II
# GO_only_method2_up <- topGO_analysis(interesting = setdiff(deg_mod2_up, deg_mod_1_up), all_genes = rownames(dds_method2),
#                                      methods = "classic", topNodes = 2000)
# GO_only_method1_up <- topGO_analysis(interesting = setdiff(deg_mod_1_up, deg_mod2_up), all_genes = rownames(dds_method2),
#                                      methods = "classic", topNodes = 1000)
save(GO_method1_up, GO_method2_up, #GO_method1_or2_up,
#GO_only_method2_up, GO_only_method1_up,
deg_mod2_up,
file = "052_GO_res_classic_2000.RData")
}
# necessary data for plot
selected_GO_method_1 <- GO_method1_up$gen_table %>%
dplyr::select(GO.ID, Fisher.elim_adjust)
selected_GO_method_2 <- GO_method2_up$gen_table %>%
dplyr::select(GO.ID, Fisher.elim_adjust)
# find GO Groups that are in both GO analyses
common_go <- intersect(selected_GO_method_1$GO.ID, selected_GO_method_2$GO.ID)
# create data.frame for plot
plot_GO_data <- data.frame("GO_group" = common_go, "method_i_p_values" = selected_GO_method_1[selected_GO_method_1$GO.ID %in% common_go, 2],
"method_ii_p_values" = selected_GO_method_2[selected_GO_method_2$GO.ID %in% common_go, 2])
ggplot(plot_GO_data, aes(x = method_i_p_values, y = method_ii_p_values)) +
geom_point() +
coord_fixed() +
theme_classic() +
geom_abline( intercept = 0, slope = 1) +
xlab("p-value for GO-Group with Method I") +
ylab("p-value for GO-Group with Method II")
