theme(axis.title.y = element_blank())
p4.22 <- plot_it_3_6_mod1(g = "ENSMUSG00000112013", week3 = dds_obj_mod1[[1]], week6 = dds_obj_mod1[[2]], ref = 3, start = 2, s1 = 1.5,  sl = 1.1, lim1 = 2, lim2 = 6.5,number =paste("4: ", rowData(gse_ia["ENSMUSG00000112013",])[,2]))+  theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
#
# pdf("scheme_4.pdf", width = 10, height = 5)
# ggarrange(p4.22,p4.21,  ncol = 2,  common.legend = F)
# dev.off()
####### # 5
# rownames(res_mod2_ia)[which(res_mod2_main$log2FoldChange > 0.48 & res_mod2_main$log2FoldChange < 0.52 & res_mod2_main$log2FoldChange + res_mod2_ia$log2FoldChange > 0.75 & res_mod2_main$log2FoldChange + res_mod2_ia$log2FoldChange < 0.85)]
p5.11 <- plot_it_3_6(g = "ENSMUSG00000037348", dds = gse_ia, ref = 3, start = 10,  sl = 1.1, lim1 = 10, lim2 = 13, main = 0.1, interac = 0.1)+  theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
p5.12 <- plot_it_3_6_mod1(g = "ENSMUSG00000037348", week3 = dds_obj_mod1[[1]], week6 = dds_obj_mod1[[2]], ref = 3, start = 10,  sl = 1.1, lim1 = 10, lim2 = 13, main3 =  0.1, number =paste("5: ", rowData(gse_ia["ENSMUSG00000037348",])[,2]))+  theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
# pdf("scheme_5.pdf", width = 10, height = 5)
# ggarrange(p5.12,p5.11,  ncol = 2,  common.legend = F)
# dev.off()
######### 6
# rownames(res_mod2_ia)[which(res_mod2_main$log2FoldChange < 0.41 & res_mod2_main$log2FoldChange > 0.38 & res_mod2_main$log2FoldChange + res_mod2_ia$log2FoldChange > -1.1 & res_mod2_main$log2FoldChange + res_mod2_ia$log2FoldChange < -0.99)]
p6.11 <- plot_it_3_6(g = "ENSMUSG00000067951", dds = gse_ia, ref = 3, start = 4.5, sl = 1.1, lim1 = 4.5, lim2 = 7.5, main =  0.1)+  theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
p6.12 <- plot_it_3_6_mod1(g = "ENSMUSG00000067951", week3 = dds_obj_mod1[[1]], week6 = dds_obj_mod1[[2]], ref = 3, start = 4.5,  sl = 1.1, lim1 = 4.5, lim2 = 7.5, main3 = 0.1, number =paste("6: ", rowData(gse_ia["ENSMUSG00000067951",])[,2]))+  theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
# pdf("scheme_6.pdf", width = 10, height = 5)
# ggarrange(p6.12,p6.11,  ncol = 2,  common.legend = F)
# dev.off()
####### # # 7
# rownames(res_mod2_ia)[which(res_mod2_main$log2FoldChange < 0.42 & res_mod2_main$log2FoldChange > 0.38 & res_mod2_main$log2FoldChange + res_mod2_ia$log2FoldChange > -0.41 & res_mod2_main$log2FoldChange + res_mod2_ia$log2FoldChange < -0.39)]
p7.11 <- plot_it_3_6(g = "ENSMUSG00000028637", dds = gse_ia, ref = 3, start = 6.3,   sl = 1.1, lim1 = 6.3, lim2 = 8.2, main = 0.1) #+labs(x = "weeks", y = "")+  theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
p7.12 <- plot_it_3_6_mod1(g = "ENSMUSG00000028637", week3 = dds_obj_mod1[[1]], week6 = dds_obj_mod1[[2]], ref = 3, start = 6.3,  sl = 1.1, lim1 = 6.3, lim2 = 8.2, main3 = 0.1, main6 = -0.1, number =paste("7: ", rowData(gse_ia["ENSMUSG00000028637",])[,2]))# +labs(x = "weeks", y = "")+  theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
# pdf("scheme_7.pdf", width = 10, height = 5)
# ggarrange(p7.12,p7.11,  ncol = 2,  common.legend = F)
# dev.off()
p7.11 <- plot_it_3_6(g = "ENSMUSG00000028637", dds = gse_ia, ref = 3, start = 6.3,   sl = 1.1, lim1 = 6.3, lim2 = 8.2, main = 0.1) #+labs(x = "weeks", y = "")
+  theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
p7.11 <- plot_it_3_6(g = "ENSMUSG00000028637", dds = gse_ia, ref = 3, start = 6.3,   sl = 1.1, lim1 = 6.3, lim2 = 8.2, main = 0.1)+ #+labs(x = "weeks", y = "")
theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
p7.11 <- plot_it_3_6(g = "ENSMUSG00000028637", dds = gse_ia, ref = 3, start = 6.3,   sl = 1.1, lim1 = 6.3, lim2 = 8.2, main = 0.1)+ #+labs(x = "weeks", y = "")
theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
p7.12 <- plot_it_3_6_mod1(g = "ENSMUSG00000028637", week3 = dds_obj_mod1[[1]], week6 = dds_obj_mod1[[2]], ref = 3, start = 6.3,  sl = 1.1, lim1 = 6.3, lim2 = 8.2, main3 = 0.1, main6 = -0.1, number =paste("7: ", rowData(gse_ia["ENSMUSG00000028637",])[,2]))+# +labs(x = "weeks", y = "")
theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
plot_all <- ggarrange(p1.12, p1.11, p2.22, p2.21, p3.22, p3.21, p4.22, p4.21,
p5.12, p5.11, p6.12, p6.11, p7.12, p7.11,
ncol = 2, nrow = 7, common.legend = TRUE, legend="bottom")
plot_all <- ggarrange(p1.12, p1.11, p2.22, p2.21, p3.22, p3.21, p4.22, p4.21,
p5.12, p5.11, p6.12, p6.11, p7.12, p7.11,
ncol = 2, nrow = 7, common.legend = TRUE, legend="bottom")
ggarrange(p1.12, p1.11, p2.22, p2.21,common.legend = TRUE, legend="bottom")
annotate_figure(plot_all, fig.lab.size = 20,
top = text_grob("Method I                     Method II", size = 25, face = "bold"),
left = text_grob("Log2(normalized counts)", rot = 90, size = 25, face = "bold"))
ggsave("real_genes.eps", width = 15, height = 55, unit = "cm",
device = cairo_ps)
ggsave(file = "real_genes_all.pdf", width = 25, height = 65, unit  = "cm")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
# load data
load("../RNASeq_high_fat_gene_level_summary.RData")
# load packages
library(DESeq2)
library(ggplot2)
library(vsn)
library(pheatmap)
library(RColorBrewer)
library(knitr)
library(ggpubr)
library(grid)
library(biomaRt)
library(reshape2)
library(patchwork)
library(MASS)
library("ggVennDiagram")
library(gridExtra)
source("013_functions.R")
### change level into factor
# gse$diet <- factor(gse$diet, levels = c("SD", "HFD"))
# gse$weeks <- factor(gse$weeks, levels = unique(gse$weeks))
# gse$mouse <- factor(gse$mouse, levels = unique(gse$mouse))
# gse$names <- factor(gse$names, levels = unique(gse$names))
### removing the weeks with no mice in one of the two diets
# gse_without_weeks <- gse[, gse$weeks %in% c(3,6,30, 36, 42, 48)]
# gse_without_weeks$weeks <- droplevels(gse_without_weeks$weeks)
# save(gse_without_weeks, file = "gse_without.RData")
load("gse_without.RData")
# seperate dataset into the different weeks
# separate_dataset <- lapply(c(3,6,30, 36, 42, 48), function(week){
#   # separate data set into each week
#   gse_week       <- gse_without_weeks[,which(gse_without_weeks$weeks == week)]
#   gse_week$weeks <- droplevels(gse_week$weeks)
#   return(gse_week)}
#)
#
# # for each week, build model with ~ diet
# dds_obj_mod1    <- lapply(separate_dataset,
#                           function(x) deseq_obj(gse = x,
#                                                 model = 1,
#                                                 threshold = 10, filter = T))
#
# ## list of up and down regulated genes
# res_mod1        <- lapply(dds_obj_mod1,
#                           function(x) de_mod1(dds = x, name = "diet_HFD_vs_SD"))
# ## gene names for the degs
# gene_names_mod1 <- lapply(res_mod1, function(x) gene_names(x))
#
# # list separated into deg up and down reg genes
# mod_1_up <- lapply(1:length(gene_names_mod1),
#                    function(x) c(gene_names_mod1[[x]]$up))
# mod_1_down <- lapply(1:length(gene_names_mod1),
#                      function(x) c(gene_names_mod1[[x]]$down))
# # add names to all objects
# names(res_mod1) <- names(gene_names_mod1) <- names(mod_1_up) <-
#   names(mod_1_down) <- names(dds_obj_mod1) <- paste0("week", c(3,6,30, 36, 42, 48))
#
# # ##save results for model 1
# save(dds_obj_mod1, res_mod1, gene_names_mod1, mod_1_up, mod_1_down,
#     file = "results_model_1_filter.RData")
load("results_model_1_filter.RData")
# find "DEGs", in our case genes that are only DEG in week 6,
# (p-value < 0.05 , abs(log2FC) > log2(1.5) in week 6;
# p-value > 0.05 , abs(log2FC) < log2(1.5) in week 3), divided in up and down regulated
deg_mod_1_down <- setdiff(mod_1_down$week6, c(mod_1_down$week3, mod_1_up$week3))
deg_mod_1_up <- setdiff(mod_1_up$week6, c(mod_1_down$week3, mod_1_up$week3))
# Tables containing information about up/down regulation for different weeks and the overlap
week_3_6_mod_1_table <- data.frame(
"Week 3" = c(length(setdiff(mod_1_down$week3, c(mod_1_down$week6))),
length(setdiff(mod_1_up$week3, c(mod_1_up$week6)))),
"Week 6" = c(length(setdiff(mod_1_down$week6, c(mod_1_down$week3))),
length(setdiff(mod_1_up$week6, c(mod_1_up$week3)))),
"Overlap" = c(length(intersect(mod_1_down$week3, mod_1_down$week6)),
length(intersect(mod_1_up$week3, mod_1_up$week6)))
)
week_3_6_mod_1_table
# Venn diagram for up and down reg genes per week and in overlap
# up regulated genes (compared with week before)
venn_diagram(mod_1_up, version = 2, add_title = "Upregulated Genes")
# down venn_diagram(mod_1_down, version = 1)
venn_diagram(mod_1_down, version = 2, add_title = "Downregulaetd Genes")
# object without filtering (50% threshold) the genes
# gse_ia_no_filter <- deseq_obj(gse_without_weeks, model = 2, threshold = 10,
#                        filter = F)
#save(gse_ia_no_filter, file = "gse_ia_no_filter.Rdata")
load("gse_ia_no_filter.RData")
# only coeficient diet HDF vs SD
plot_hist(gse = gse_ia_no_filter, "diet_HFD_vs_SD")  + ggtitle("Coefficient WD vs SD")
ggsave(file = "hist_before_filter.eps", width = 5.5, height = 3.5)
ggsave(file = "hist_before_filter.pdf", width = 5.5, height = 3.5)
# Peak at 0.2
#which.max(table(round(coef(gse_ia_no_filter)[,2], 3)))
# now with filter
# gse_ia <- deseq_obj(gse_without_weeks, model = 2, threshold = 10, filter = T)
# save(gse_ia, file = "gse_ia.RData")
load("gse_ia.Rdata")
plot_hist(gse = gse_ia, "diet_HFD_vs_SD") + ggtitle("Coefficient WD vs SD")
ggsave(file = "hist_after_filter.eps", width = 5.5, height = 3.5)
ggsave(file = "hist_after_filter.pdf", width = 5.5, height = 3.5)
#Interaction WD week 6
# object with sign genes for the interaction effect at week 6
# p_val = 0.05, thresholdfold = log2(1.5)
# res_mod2 <- de_mod2("dietHFD.weeks6", gse_ia)
# save(res_mod2,  file = "results_model_2.RData")
load("results_model_2.RData")
plot_it("ENSMUSG00000069170", gse_ia, ref = 3, start = 6, s1 = 1.5, s_arrow = 1.1, sl = 1.1)
# get gene name
#rowData(gse_without_weeks)["ENSMUSG00000069170",]
ggsave(file = "fig_only_mod3_gene1.eps", width = 8, height = 4.5)
# model for diet and week
# dds_method1 <- DESeqDataSet(gse_without_weeks, design = ~ diet + weeks)
# dds_method1 <- dds_method1[rowSums(counts(dds_method1)) >= 0.5, ]
# dds_method1 <- DESeq(dds_method1)
# save(dds_method1, file = "dds_method1.RData")
load("dds_method1.RData")
plot_no_int("ENSMUSG00000069170", dds_method1, ref = 3, start = 3) +
theme(legend.position = "none")
ggsave(file = "fig_only_mod3_gene1_noint.eps", width = 8, height = 4.5)
# table deg per method divided in up and down and overlap
comp_method_1_2 <- data.frame(
"method I new in week 6" = c(length(deg_mod_1_down), length(deg_mod_1_up)),
"method II" = c(sum(res_mod2$log2FoldChange < 0), sum(res_mod2$log2FoldChange > 0)),
"overlap" = c(length(intersect(deg_mod_1_down, rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)])),
length(intersect(deg_mod_1_up, rownames(res_mod2)[which(res_mod2$log2FoldChange > 0)])))
)
rownames(comp_method_1_2) <- c("down", "up")
comp_method_1_2
# example gene
plot_it("ENSMUSG00000025138", gse_ia, ref = 3, start = 9, s1 = 1.5, s_arrow = 1.1, sl = 1.1)
ggsave(file = "fig_only_mod3_typ.eps", width = 8, height = 4.5)
# get gene name:
#rowData(gse_without_weeks)["ENSMUSG00000025138",]
# plots for different interaction scenarios
df0 <- data.frame(x = c(1,2,1,2), y = c(0.2, 0.9, 0.7,1.4)* 10, col = factor(c("Group 0", "Group 0", "Group 1", "Group 1")))
p1 <- scheme_interaction_plot(df0, "a) interaction 0" )
df2 <- data.frame(x = c(1,2,1,2), y = c(0.2, 0.9, 0.7, 2)* 10, col = factor(c("Group 0", "Group 0", "Group 1", "Group 1")))
p2 <- scheme_interaction_plot(df2, "b) interaction +")
df <- data.frame(x = c(1,2,1,2), y = c(0.2, 0.9, 1.2,0.4)* 10, col = factor(c("Group 0", "Group 0", "Group 1", "Group 1")))
p3 <- scheme_interaction_plot(df, "c) interaction -")
df1 <- data.frame(x = c(1,2,1,2), y = c(0.2, 0.2, 0.2, 1.4)* 10, col = factor(c("Group 0", "Group 0", "Group 1", "Group 1")))
p4 <- scheme_interaction_plot(df1, "d) interaction +")
df3 <- data.frame(x = c(1,2,1,2), y = c(0.2, 0.9, 0.2, 1.5)* 10, col = factor(c("Group 0", "Group 0", "Group 1", "Group 1")))
p5 <- scheme_interaction_plot(df3, "e) interaction +")
df4 <- data.frame(x = c(1,2,1,2), y = c(0.2, 0.9, 2, 1.2) *10, col = factor(c("Group 0", "Group 0", "Group 1", "Group 1")))
p6 <- scheme_interaction_plot(df4, "f) interaction -")
#ggarrange(p1, p2, p3, p4, p5, p6, ncol = 3, nrow = 2, common.legend = TRUE, legend="bottom")
# combine all plots
ggarrange(p1, p2, p3, p4, p5, p6, ncol = 3, nrow = 2, common.legend = TRUE, legend="top")
ggsave(file = "fig_interaction_example_2.eps", device = cairo_ps, width = 10, height = 9)
# plot all together
pl_scheme_1 <- scheme_model(0.5, 0.9, 0.6, 1.11, 0.05, "not DEG", "not DEG", F, F, F, F,  1)
pl_scheme_2 <- scheme_model(0.5, 0.9, 0.6, 2.02, 0.05, "DEG", "DEG", F, T, F, T, 2)
pl_scheme_3 <- scheme_model(0.5, 1.3, 0.6, 2.5, 0.05, "not DEG", "DEG", T, T, T, T,  3)
pl_scheme_4 <- scheme_model(1.5, 2.47, 1.6, 0.71, 0.05, "not DEG", "DEG", T, T, T, T, 4)
pl_scheme_5 <- scheme_model(0.5, 1.01, 0.6, 1.43, 0.05, "DEG", "not DEG", F, T, F, F, 5)
pl_scheme_6 <- scheme_model(1.5, 1.89, 1.6, 0.55, 0.05, "DEG", "DEG", F, T, F, T, 6)
# @caro remove:change - 0.7 to + 0.7 on yend in corresponding geom segment to avoid white dot on arrow
pl_scheme_7 <- scheme_model(1, 1.39, 1.1, 0.7, 0.05, "not DEG", "DEG", F, F, F, T, 7)
# plot_all <- ggarrange(pl_scheme_1[[1]],pl_scheme_1[[2]], pl_scheme_2[[1]], pl_scheme_2[[2]],
#                       pl_scheme_3[[1]],pl_scheme_3[[2]], pl_scheme_4[[1]], pl_scheme_4[[2]],
#                       pl_scheme_5[[1]],pl_scheme_5[[2]], pl_scheme_6[[1]], pl_scheme_6[[2]],
#                       pl_scheme_7[[1]],pl_scheme_7[[2]],
#                       ncol = 2, nrow = 7, common.legend = TRUE, legend="bottom")
# annotate_figure(plot_all, fig.lab.size = 20,
#                 top = text_grob("Method I                   Method II", size = 25, face = "bold"))
# ggsave(file = "newplot.pdf", width = 15, height = 65, unit  = "cm")
# each plot: different scenario
plot_first_row <- ggarrange(pl_scheme_1[[1]],pl_scheme_1[[2]], ncol = 2, nrow = 1)
annotate_figure(plot_first_row, fig.lab.size = 20,
top = text_grob("Method I                   Method II", size = 25, face = "bold"))
ggsave("scheme_1.eps", device = cairo_ps, width = 20, height = 10, unit  = "cm")
ggarrange(pl_scheme_2[[1]], pl_scheme_2[[2]],ncol = 2, nrow = 1)
ggsave("scheme_2.eps", device = cairo_ps, width = 20, height = 10, unit  = "cm")
ggarrange(pl_scheme_3[[1]], pl_scheme_3[[2]],ncol = 2, nrow = 1)
ggsave("scheme_3.eps", device = cairo_ps, width = 20, height = 10, unit  = "cm")
ggarrange(pl_scheme_4[[1]], pl_scheme_4[[2]],ncol = 2, nrow = 1)
ggsave("scheme_4.eps", device = cairo_ps, width = 20, height = 10, unit  = "cm")
ggarrange(pl_scheme_5[[1]], pl_scheme_5[[2]],ncol = 2, nrow = 1)
ggsave("scheme_5.eps", device = cairo_ps, width = 20, height = 10, unit  = "cm")
ggarrange(pl_scheme_6[[1]], pl_scheme_6[[2]],ncol = 2, nrow = 1)
ggsave("scheme_6.eps", device = cairo_ps, width = 20, height = 10, unit  = "cm")
# @caro remove: change - 0.7 to + 0.7 on yend in corresponding geom segment to avoid white dot on arrow
# combine all plots
ggarrange(pl_scheme_7[[1]], pl_scheme_7[[2]],ncol = 2, nrow = 1, legend = "bottom", common.legend = T)
ggsave("scheme_7.eps", device = cairo_ps, width = 20, height = 10, unit  = "cm")
#for each scenario find genes that are close to artificil scenario and plot with
# method I and II
# we need data without shrinkage
res_mod2_ia <- results(gse_ia, name = "dietHFD.weeks6")
res_mod2_main <- results(gse_ia, name = "diet_HFD_vs_SD")
#################################### 1
# @caro: remove? find close genes
# rownames(res_mod2_ia)[which(res_mod2_main$log2FoldChange < 0.41 & res_mod2_main$log2FoldChange > 0.39 & res_mod2_main$log2FoldChange + res_mod2_ia$log2FoldChange > 0.51 & res_mod2_main$log2FoldChange + res_mod2_ia$log2FoldChange < 0.53)]
# ENSMUSG00000037031
p1.11 <- plot_it_3_6(g = "ENSMUSG00000037031", dds = gse_ia, ref = 3, start = 5.2, sl = 1.1, lim1 = 5.2, lim2 = 8.1, main = 0.1, interac = 0.1)+
theme(legend.position="none")+
theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
p1.12 <- plot_it_3_6_mod1(g = "ENSMUSG00000037031", week3 = dds_obj_mod1[[1]], week6 = dds_obj_mod1[[2]], ref = 3, start = 5.2,  sl = 1.1, lim1 = 5.2, lim2 = 8.1, main3 = 0.1, main6 = 0.1, number = paste("1: ", rowData(gse_ia["ENSMUSG00000037031",])[,2]))+
theme(legend.position="none") +
theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
# #save plots
#ggarrange(p1.12, p1.11, ncol = 2, nrow = 1)
#ggsave("real_1.eps", device = cairo_ps, width = 20, height = 10, unit  = "cm")
####### # 2
# find close genes
# rownames(res_mod2_ia)[which(res_mod2_main$log2FoldChange < 0.44 & res_mod2_main$log2FoldChange > 0.37 & res_mod2_main$log2FoldChange + res_mod2_ia$log2FoldChange > 1.37 & res_mod2_main$log2FoldChange + res_mod2_ia$log2FoldChange < 1.43)]
p2.21 <-  plot_it_3_6(g = "ENSMUSG00000035184", dds = gse_ia, ref = 3, start = 6, sl = 1.1, lim1 = 6, lim2 = 10.5, main = 0.08)+  theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
p2.22 <-   plot_it_3_6_mod1(g = "ENSMUSG00000035184", week3 = dds_obj_mod1[[1]], week6 = dds_obj_mod1[[2]], ref = 3, start = 6,  sl = 1.1, lim1 = 6, lim2 = 10.5, main3 = 0.12, number = paste("2: ", rowData(gse_ia["ENSMUSG00000035184",])[,2]))+  theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
# pdf("scheme_2.pdf", width = 10, height = 5)
# ggarrange(p2.22, p2.21,  ncol = 2,  common.legend = TRUE)
# dev.off()
####### # 3
#find close genes
# rownames(res_mod2_ia)[which(res_mod2_main$log2FoldChange < 1.15 & res_mod2_main$log2FoldChange > 0.8 & res_mod2_main$log2FoldChange + res_mod2_ia$log2FoldChange > 1.8 & res_mod2_main$log2FoldChange + res_mod2_ia$log2FoldChange < 2.15)]
p3.21 <- plot_it_3_6(g = "ENSMUSG00000022439", dds = gse_ia, ref = 3, start = 4,  sl = 1.1, lim1 = 4, lim2 = 8)+  theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
p3.22 <- plot_it_3_6_mod1(g = "ENSMUSG00000022439", week3 = dds_obj_mod1[[1]], week6 = dds_obj_mod1[[2]], ref = 3, start = 4, sl = 1.1, lim1 = 4, lim2 = 8, number =paste("3: ", rowData(gse_ia["ENSMUSG00000022439",])[,2]))+  theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
# pdf("scheme_3.pdf", width = 10, height = 5)
# ggarrange(p3.22,p3.21,  ncol = 2,  common.legend = F)
# dev.off()
####### # 4
#find close genes
# rownames(res_mod2_ia)[which(res_mod2_main$log2FoldChange < 1.1 & res_mod2_main$log2FoldChange > 0.9 & res_mod2_main$log2FoldChange + res_mod2_ia$log2FoldChange > -1.1 & res_mod2_main$log2FoldChange + res_mod2_ia$log2FoldChange < -0.85)]
p4.21 <- plot_it_3_6(g = "ENSMUSG00000112013", dds = gse_ia, ref = 3, start = 2, sl = 1.1, lim1 = 2, lim2 = 6.5)+  theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
p4.22 <- plot_it_3_6_mod1(g = "ENSMUSG00000112013", week3 = dds_obj_mod1[[1]], week6 = dds_obj_mod1[[2]], ref = 3, start = 2, s1 = 1.5,  sl = 1.1, lim1 = 2, lim2 = 6.5,number =paste("4: ", rowData(gse_ia["ENSMUSG00000112013",])[,2]))+  theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
#
# pdf("scheme_4.pdf", width = 10, height = 5)
# ggarrange(p4.22,p4.21,  ncol = 2,  common.legend = F)
# dev.off()
####### # 5
# rownames(res_mod2_ia)[which(res_mod2_main$log2FoldChange > 0.48 & res_mod2_main$log2FoldChange < 0.52 & res_mod2_main$log2FoldChange + res_mod2_ia$log2FoldChange > 0.75 & res_mod2_main$log2FoldChange + res_mod2_ia$log2FoldChange < 0.85)]
p5.11 <- plot_it_3_6(g = "ENSMUSG00000037348", dds = gse_ia, ref = 3, start = 10,  sl = 1.1, lim1 = 10, lim2 = 13, main = 0.1, interac = 0.1)+  theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
p5.12 <- plot_it_3_6_mod1(g = "ENSMUSG00000037348", week3 = dds_obj_mod1[[1]], week6 = dds_obj_mod1[[2]], ref = 3, start = 10,  sl = 1.1, lim1 = 10, lim2 = 13, main3 =  0.1, number =paste("5: ", rowData(gse_ia["ENSMUSG00000037348",])[,2]))+  theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
# pdf("scheme_5.pdf", width = 10, height = 5)
# ggarrange(p5.12,p5.11,  ncol = 2,  common.legend = F)
# dev.off()
######### 6
# rownames(res_mod2_ia)[which(res_mod2_main$log2FoldChange < 0.41 & res_mod2_main$log2FoldChange > 0.38 & res_mod2_main$log2FoldChange + res_mod2_ia$log2FoldChange > -1.1 & res_mod2_main$log2FoldChange + res_mod2_ia$log2FoldChange < -0.99)]
p6.11 <- plot_it_3_6(g = "ENSMUSG00000067951", dds = gse_ia, ref = 3, start = 4.5, sl = 1.1, lim1 = 4.5, lim2 = 7.5, main =  0.1)+  theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
p6.12 <- plot_it_3_6_mod1(g = "ENSMUSG00000067951", week3 = dds_obj_mod1[[1]], week6 = dds_obj_mod1[[2]], ref = 3, start = 4.5,  sl = 1.1, lim1 = 4.5, lim2 = 7.5, main3 = 0.1, number =paste("6: ", rowData(gse_ia["ENSMUSG00000067951",])[,2]))+  theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
# pdf("scheme_6.pdf", width = 10, height = 5)
# ggarrange(p6.12,p6.11,  ncol = 2,  common.legend = F)
# dev.off()
####### # # 7
# rownames(res_mod2_ia)[which(res_mod2_main$log2FoldChange < 0.42 & res_mod2_main$log2FoldChange > 0.38 & res_mod2_main$log2FoldChange + res_mod2_ia$log2FoldChange > -0.41 & res_mod2_main$log2FoldChange + res_mod2_ia$log2FoldChange < -0.39)]
p7.11 <- plot_it_3_6(g = "ENSMUSG00000028637", dds = gse_ia, ref = 3, start = 6.3,   sl = 1.1, lim1 = 6.3, lim2 = 8.2, main = 0.1)+ #+labs(x = "weeks", y = "")
theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
p7.12 <- plot_it_3_6_mod1(g = "ENSMUSG00000028637", week3 = dds_obj_mod1[[1]], week6 = dds_obj_mod1[[2]], ref = 3, start = 6.3,  sl = 1.1, lim1 = 6.3, lim2 = 8.2, main3 = 0.1, main6 = -0.1, number =paste("7: ", rowData(gse_ia["ENSMUSG00000028637",])[,2]))+# +labs(x = "weeks", y = "")
theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank())
# pdf("scheme_7.pdf", width = 10, height = 5)
# ggarrange(p7.12,p7.11,  ncol = 2,  common.legend = F)
# dev.off()
#combining all plots from real genes in one document
plot_all <- ggarrange(p1.12, p1.11, p2.22, p2.21, p3.22, p3.21, p4.22, p4.21,
p5.12, p5.11, p6.12, p6.11, p7.12, p7.11,
ncol = 2, nrow = 7, common.legend = TRUE, legend="bottom")
#combining all plots from real genes in one document
plot_all <- ggarrange(p1.12, p1.11, p2.22, p2.21, p3.22, p3.21, p4.22, p4.21,
p5.12, p5.11, p6.12, p6.11, p7.12, p7.11,
ncol = 2, nrow = 7, common.legend = TRUE, legend="bottom")
# add annotation
annotate_figure(plot_all, fig.lab.size = 20,
top = text_grob("Method I                   Method II", size = 25, face = "bold"),
left = text_grob("Log2(normalized counts)", rot = 90, size = 25, face = "bold"))
ggsave("real_genes.eps", width = 15, height = 55, unit = "cm",
device = cairo_ps)
ggsave(file = "real_genes_all.pdf", width = 25, height = 65, unit  = "cm")
# add annotation
annotate_figure(plot_all, fig.lab.size = 20,
top = text_grob("Method I                Method II", size = 25, face = "bold"),
left = text_grob("Log2(normalized counts)", rot = 90, size = 25, face = "bold"))
# add annotation
annotate_figure(plot_all, fig.lab.size = 20,
top = text_grob("Method I                Method II", size = 25, face = "bold"),
left = text_grob("Log2(normalized counts)", rot = 90, size = 25, face = "bold"))
ggsave("real_genes.eps", width = 15, height = 55, unit = "cm",
device = cairo_ps)
# add annotation
annotate_figure(plot_all, fig.lab.size = 20,
top = text_grob("Method I             Method II", size = 25, face = "bold"),
left = text_grob("Log2(normalized counts)", rot = 90, size = 25, face = "bold"))
# add annotation
annotate_figure(plot_all, fig.lab.size = 20,
top = text_grob("Method I             Method II", size = 25, face = "bold"),
left = text_grob("Log2(normalized counts)", rot = 90, size = 25, face = "bold"))
ggsave("real_genes.eps", width = 15, height = 55, unit = "cm",
device = cairo_ps)
? mvnorm
?mvnorm
library(ggplot2)
library(ggpubr)
source("./02_Code/00_functions.R")
getwd()
setwd("C:/Users/carol/Documents/GitHub/gene_expression_interaction)
setwd("C:/Users/carol/Documents/GitHub/gene_expression_interaction")
setwd("C:/Users/carol/Documents/GitHub/gene_expression_interaction")
source("./02_Code/00_functions.R")
load("./Data/010_gse.RData")
load("./01_data/010_gse.RData")
df0 <- data.frame(x = c(1,2,1,2), y = c(0.2, 0.9, 0.7,1.4)* 10, col = factor(c("Group 0", "Group 0", "Group 1", "Group 1")))
p1 <- scheme_interaction_plot(df0, "a) interaction 0" )
df2 <- data.frame(x = c(1,2,1,2), y = c(0.2, 0.9, 0.7, 2)* 10, col = factor(c("Group 0", "Group 0", "Group 1", "Group 1")))
p2 <- scheme_interaction_plot(df2, "b) interaction +")
df <- data.frame(x = c(1,2,1,2), y = c(0.2, 0.9, 1.2,0.4)* 10, col = factor(c("Group 0", "Group 0", "Group 1", "Group 1")))
p3 <- scheme_interaction_plot(df, "c) interaction -")
df1 <- data.frame(x = c(1,2,1,2), y = c(0.2, 0.2, 0.2, 1.4)* 10, col = factor(c("Group 0", "Group 0", "Group 1", "Group 1")))
p4 <- scheme_interaction_plot(df1, "d) interaction +")
df3 <- data.frame(x = c(1,2,1,2), y = c(0.2, 0.9, 0.2, 1.5)* 10, col = factor(c("Group 0", "Group 0", "Group 1", "Group 1")))
p5 <- scheme_interaction_plot(df3, "e) interaction +")
df4 <- data.frame(x = c(1,2,1,2), y = c(0.2, 0.9, 2, 1.2) *10, col = factor(c("Group 0", "Group 0", "Group 1", "Group 1")))
p6 <- scheme_interaction_plot(df4, "f) interaction -")
# combine all plots
ggarrange(p1, p2, p3, p4, p5, p6, ncol = 3, nrow = 2, common.legend = TRUE, legend="top")
library(ggplot2)
library(ggpubr)
source("./02_Code/00_functions.R")
load("./Data/010_gse.RData")
load("./01_data/010_gse.RData")
# gse objekt for method ii, @caro namen ggf aendern?
gse_ia <- deseq_obj(gse_without_weeks, model = 2, threshold = 10, filter = T)
plot_it("ENSMUSG00000069170", gse_ia, ref = 3, start = 5.5, s1 = 1.5, s_arrow = 1.1, sl = 1.1)
# plot all together
pl_scheme_1 <- scheme_model(0.5, 0.9, 0.6, 1.11, 0.05, "not DEG", "not DEG", F, F, F, F,  1)
pl_scheme_3 <- scheme_model(0.5, 1.3, 0.6, 2.5, 0.05, "not DEG", "DEG", T, T, T, T,  3)
pl_scheme_5 <- scheme_model(0.5, 1.01, 0.6, 1.43, 0.05, "DEG", "not DEG", F, T, F, F, 5)
# @caro remove:change - 0.7 to + 0.7 on yend in corresponding geom segment to avoid white dot on arrow
pl_scheme_7 <- scheme_model(1, 1.39, 1.1, 0.7, 0.05, "not DEG", "DEG", F, F, F, T, 7)
177+717+363
717+177
# res_mod2 <- de_mod2("dietHFD.weeks6", gse_ia)
# save(res_mod2,  file = "results_model_2.RData")
load("results_model_2.RData")
res_mod2
rownames(res_mod2)
deg_mod_1_up
load("results_model_1_filter.RData")
load("results_model_1_filter.RData")
find "DEGs", in our case genes that are only DEG in week 6,
# find "DEGs", in our case genes that are only DEG in week 6,
# (p-value < 0.05 , abs(log2FC) > log2(1.5) in week 6;
# p-value > 0.05 , abs(log2FC) < log2(1.5) in week 3), divided in up and down regulated
deg_mod_1_down <- setdiff(mod_1_down$week6, c(mod_1_down$week3, mod_1_up$week3))
deg_mod_1_up <- setdiff(mod_1_up$week6, c(mod_1_down$week3, mod_1_up$week3))
########## tabelle ist falsch neue erstellen
# deg only method I up
deg_mod_1_up %in% rownames(res_mod2)
########## tabelle ist falsch neue erstellen
# deg only method I up
sum(deg_mod_1_up %in% rownames(res_mod2)=)
########## tabelle ist falsch neue erstellen
# deg only method I up
sum(deg_mod_1_up %in% rownames(res_mod2))
########## tabelle ist falsch neue erstellen
# deg only method I up
c(length(deg_mod_1_up) - sum(deg_mod_1_up %in% rownames(res_mod2)), sum(deg_mod_1_up %in% rownames(res_mod2)))
########## tabelle ist falsch neue erstellen
# deg only method I up
c(length(deg_mod_1_up) - sum(deg_mod_1_up %in% rownames(res_mod2)), sum(deg_mod_1_up %in% rownames(res_mod2)), length(rownames(res_mod2)) - sum(deg_mod_1_up %in% rownames(res_mod2)))
########## tabelle ist falsch neue erstellen
# deg only method I up
c(length(deg_mod_1_up) - sum(deg_mod_1_up %in% rownames(res_mod2)),
sum(deg_mod_1_up %in% rownames(res_mod2)),
length(rownames(res_mod2)) - sum(rownames(res_mod2) %in% deg_mod_1_up))
########## tabelle ist falsch neue erstellen
# deg only method I up
c(length(deg_mod_1_up) - sum(deg_mod_1_up %in% rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)]),
sum(deg_mod_1_up %in% rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)]),
length(rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)]) - sum(rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)] %in% deg_mod_1_up))
rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)]
########## tabelle ist falsch neue erstellen
# deg only method I up
c(length(deg_mod_1_up) - sum(deg_mod_1_up %in% rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)]),
sum(deg_mod_1_up %in% rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)]),
length(rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)]) - sum(rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)] %in% deg_mod_1_up))
########## tabelle ist falsch neue erstellen
# deg only method I up
c(length(deg_mod_1_up) - sum(deg_mod_1_up %in% rownames(res_mod2)[which(res_mod2$log2FoldChange > 0)]),
sum(deg_mod_1_up %in% rownames(res_mod2)[which(res_mod2$log2FoldChange > 0)]),
length(rownames(res_mod2)[which(res_mod2$log2FoldChange > 0)]) - sum(rownames(res_mod2)[which(res_mod2$log2FoldChange > 0)] %in% deg_mod_1_up))
c(length(deg_mod_1_down) - sum(deg_mod_1_down %in% rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)]),
sum(deg_mod_1_down %in% rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)]),
length(rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)]) - sum(rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)] %in% deg_mod_1_dwon))
c(length(deg_mod_1_down) - sum(deg_mod_1_down %in% rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)]),
sum(deg_mod_1_down %in% rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)]),
length(rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)]) - sum(rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)] %in% deg_mod_1_down))
sum(deg_mod_1_down %in% rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)])
sum(rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)] %in% deg_mod_1_down)
# Table 2 ----------------------------------------------------------------------
data.frame("up" = c(length(deg_mod_1_up) - sum(deg_mod_1_up %in% rownames(res_mod2)[which(res_mod2$log2FoldChange > 0)]),
sum(deg_mod_1_up %in% rownames(res_mod2)[which(res_mod2$log2FoldChange > 0)]),
length(rownames(res_mod2)[which(res_mod2$log2FoldChange > 0)]) - sum(rownames(res_mod2)[which(res_mod2$log2FoldChange > 0)] %in% deg_mod_1_up))
"down" = c(length(deg_mod_1_down) - sum(deg_mod_1_down %in% rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)]),
# Table 2 ----------------------------------------------------------------------
data.frame("up" = c(length(deg_mod_1_up) - sum(deg_mod_1_up %in% rownames(res_mod2)[which(res_mod2$log2FoldChange > 0)]),
sum(deg_mod_1_up %in% rownames(res_mod2)[which(res_mod2$log2FoldChange > 0)]),
length(rownames(res_mod2)[which(res_mod2$log2FoldChange > 0)]) - sum(rownames(res_mod2)[which(res_mod2$log2FoldChange > 0)] %in% deg_mod_1_up)),
"down" = c(length(deg_mod_1_down) - sum(deg_mod_1_down %in% rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)]),
sum(deg_mod_1_down %in% rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)]),
length(rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)]) - sum(rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)] %in% deg_mod_1_down))
)
data.frame("Method I only" = c(length(deg_mod_1_up) - sum(deg_mod_1_up %in% rownames(res_mod2)[which(res_mod2$log2FoldChange > 0)]),
c(length(deg_mod_1_down) - sum(deg_mod_1_down %in% rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)]))),
"Overlap" = c(sum(deg_mod_1_up %in% rownames(res_mod2)[which(res_mod2$log2FoldChange > 0)]),
sum(deg_mod_1_down %in% rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)])),
"Method II only" = c(length(rownames(res_mod2)[which(res_mod2$log2FoldChange > 0)]) - sum(rownames(res_mod2)[which(res_mod2$log2FoldChange > 0)] %in% deg_mod_1_up),
length(rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)]) - sum(rownames(res_mod2)[which(res_mod2$log2FoldChange < 0)] %in% deg_mod_1_down))
)
View(res_mod1)
540 + 177
week_3_6_mod_1_table
# table
# first row up, second down regulated
week_3_6_mod_1_table <- data.frame(
"Week 3" = c(length(setdiff(mod_1_down$week3, c(mod_1_down$week6))),
length(setdiff(mod_1_up$week3, c(mod_1_up$week6)))),
"Week 6" = c(length(setdiff(mod_1_down$week6, c(mod_1_down$week3))),
length(setdiff(mod_1_up$week6, c(mod_1_up$week3)))),
"Overlap" = c(length(intersect(mod_1_down$week3, mod_1_down$week6)),
length(intersect(mod_1_up$week3, mod_1_up$week6)))
)
week_3_6_mod_1_table
# table
# first row up, second down regulated
week_3_6_mod_1_table <- data.frame(
"Week 3" = c(length(setdiff(mod_1_up$week3, c(mod_1_up$week6))),
length(setdiff(mod_1_down$week3, c(mod_1_down$week6)))),
"Week 6" = c(length(setdiff(mod_1_up$week6, c(mod_1_up$week3))),
length(setdiff(mod_1_down$week6, c(mod_1_down$week3)))),
"Overlap" = c(length(intersect(mod_1_up$week3, mod_1_up$week6)),
length(intersect(mod_1_down$week3, mod_1_down$week6)))
)
week_3_6_mod_1_table
plot_no_int("ENSMUSG00000069170", dds_method1, ref = 3, start = 3) +
theme(legend.position = "none")
# gse objekt for method ii, @caro namen ggf aendern? laden einfuegen?
gse_ia <- deseq_obj(gse_without_weeks, model = 2, threshold = 10, filter = T)
plot_it("ENSMUSG00000069170", gse_ia, ref = 3, start = 5.5, s1 = 1.5, s_arrow = 1.1, sl = 1.1)
ggsave(file = "./03_figures/01_main/fig2_lower_example_gene.eps", width = 8, height = 4.5)
ggsave(file = "./03_figures/01_main/fig2_lower_example_gene.jpeg", width = 8, height = 4.5)
